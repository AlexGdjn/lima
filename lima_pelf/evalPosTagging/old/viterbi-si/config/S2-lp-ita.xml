<?xml version='1.0' encoding='iso8859-1'?>
<modulesConfig>
  <module name="Processors">
    <group name="main" class="ProcessUnitPipeline" >
      <list key="processUnitSequence">
        <item value="tokenizer"/>
        <item value="fullTokenXmlLoggerTokenizer"/>
        <item value="simpleWord"/>
        <item value="fullTokenXmlLoggerSimpleWord"/>
        <item value="orthographicAlternatives"/>
        <item value="fullTokenXmlLoggerOrthographic"/>
        <item value="hyphenWordAlternatives"/>
        <item value="fullTokenXmlLoggerHyphen"/>
        <!--item value="idiomaticAlternatives"/-->
        <!--item value="fullTokenXmlLoggerIdiomatic"/-->
        <item value="defaultProperties"/>
        <item value="simpleDefaultProperties"/>
        <!--item value="mincostPostagger"/-->
        <!--item value="fullTokenXmlLoggerDefaultProperties"/-->
        <!--item value="dotGraphWriter"/-->
        <item value="sentenceBoundsFinder"/>
        <!--item value="specificEntitiesRecognizer"/-->
        <!--item value="syntacticAnalyzer"/-->
        <!--item value="debugSyntacticAnalysisLogger"/-->
        <!--item value="compoundBuilderFromSyntacticData"/-->
      </list>
    </group>
    <group name="query" class="ProcessUnitPipeline" >
      <list key="processUnitSequence">
        <item value="tokenizer"/>
        <item value="simpleWord"/>
        <item value="orthographicAlternatives"/>
        <item value="hyphenWordAlternatives"/>
        <!--item value="idiomaticAlternatives"/-->
        <item value="defaultProperties"/>
        <!--item value="dummyPostagger"/-->
        <!--item value="specificEntitiesRecognizer"/-->
        <item value="simpleCompoundExtractor"/>
      </list>
    </group>
    <group name="beginStatusLogger" class="StatusLogger">
      <param key="outputFile" value="beginStatus.log"/>
      <list key="toLog">
        <item value="VmSize"/>
	<item value="VmData"/>
      </list>
    </group>
    <group name="tokenizer" class="Tokenizer">
      <param key="automatonFile" value="LinguisticProcessings/ita/tokenizerAutomaton-ita.xml"/>
      <param key="charChart" value="charchart"/>
    </group>
    <group name="simpleWord" class="SimpleWord">
        <param key="dictionary" value="mainDictionary"/>
    </group>
    <group name="orthographicAlternatives" class="OrthographicAlternatives">
        <param key="dictionary" value="mainDictionary"/>
	<param key="charChart" value="charchart"/>
	<!--param key="confidentMode" value="true"/-->
    </group>
    <group name="hyphenWordAlternatives" class="HyphenWordAlternatives">
      <param key="dictionary" value="mainDictionary"/>
      <param key="charChart" value="charchart"/>
      <param key="tokenizer" value="tokenizer"/>
    </group>
    <group name="idiomaticAlternatives" class="IdiomaticAlternatives">
      <param key="dictionary" value="mainDictionary"/>
      <param key="recognizer" value="idiomaticExpressionsRecognizer"/>
    </group>
    <group name="defaultProperties" class="DefaultProperties">
      <param key="dictionary" value="mainDictionary"/>
      <param key="NpMacroCategory" value="L_NP" />
      <list name="NpMicroCategory">
        <item value="L_NP_GEN"/>
      </list>
</group>
    <group name="simpleDefaultProperties" class="SimpleDefaultProperties">
      <list name="defaultCategories">
        <item value="L_NP L_NP_GEN"/>
      </list>
    </group>
    <group name="mincostPostagger" class="MinCostPosTagger">
      <param key="trigramMatrix" value="trigramMatrix"/>
      <param key="bigramMatrix" value="bigramMatrix"/>
      <param key="costFunction" value="FrequencyCost"/>
      <!--param key="costFunction" value="ThresholdIntegerCost" /-->
      <param key="trigramThreshold" value="0.1" />
      <param key="goodTrigramCost" value="0" />
      <param key="badTrigramCost" value="1" />
      <param key="bigramCost" value="4" />
      <param key="unigramCost" value="10" />
      <param key="defaultCategory" value="L_PONCTU_FORTE"/>
      <list name="stopCategories">
        <item value="L_PONCTU_FORTE" />
      </list>
    </group>
    <group name="sentenceBoundsFinder" class="SentenceBoundsFinder">
      <list name="stopCategories">
        <item value="L_PONCTU_FORTE" />
      </list>
    </group>
    <group name="specificEntitiesRecognizer" class="SpecificEntitiesRecognizer">
      <param key="automaton" value="specificEntitiesAutomaton"/>
    </group>
    <group name="syntacticAnalyzer" class="SyntacticAnalyzer">
      <param key="chainMatrix" value="chainMatrix"/>
      <list name="actions">
          <item value="setl2r"/>
          <item value="l2rHomoSyntagmaticRelationRules"/>
          <item value="setr2l"/>
          <item value="r2lHomoSyntagmaticRelationRules"/>
      </list>
      <param key="disambiguated" value="true"/>
    </group>
    <group name="compoundBuilderFromSyntacticData" class="CompoundsBuilderFromSyntacticData">
    </group>
    <group name="fullTokenXmlLoggerTokenizer" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".tokenizer.xml"/>
    </group>
    <group name="fullTokenXmlLoggerSimpleWord" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".simpleword.xml"/>
    </group>
    <group name="fullTokenXmlLoggerOrthographic" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".ortho.xml"/>
    </group>
    <group name="fullTokenXmlLoggerHyphen" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".hyphen.xml"/>
    </group>
    <group name="fullTokenXmlLoggerIdiomatic" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".idiom.xml"/>
    </group>
    <group name="fullTokenXmlLoggerDefaultProperties" class="FullTokenXmlLogger">
      <param key="outputSuffix" value=".default.xml"/>
    </group>
    <group name="disambiguatedGraphXmlLogger" class="DisambiguatedGraphXmlLogger">
      <param key="outputSuffix" value=".disambiguated.xml"/>
      <param key="dictionaryCode" value="dictionaryCode"/>
    </group>
    <group name="debugSyntacticAnalysisLogger" class="DebugSyntacticAnalysisLogger">
      <param key="outputSuffix" value=".syntanal.txt"/>
    </group>
    <group name="dotGraphWriter" class="DotGraphWriter">
      <param key="outputSuffix" value=".dot"/>
      <param key="trigramMatrix" value="trigramMatrix"/>
      <param key="bigramMatrix" value="bigramMatrix"/>
      <list key="vertexDisplay">
        <item value="inflectedform"/>
        <item value="symbolicmicrocategory"/>
        <item value="numericmicrocategory"/>
        <!--item value="genders"/>
        <item value="numbers"/-->
      </list>
    </group>
  </module>
  <module name="AnalysisDumpers">
    <group name="bowDumper" class="BowDumper">
      <param key="stopList" value="stopList"/>
      <param key="useStopList" value="true"/>
      <param key="useEmptyMacro" value="true"/>
      <param key="useEmptyMicro" value="true"/>
      <map name="NEmacroCategories">
        <entry key="TIMEX" value="L_NC"/>
        <entry key="NUMEX" value="L_NC"/>
        <entry key="ORGANIZATION" value="L_NP"/>
        <entry key="LOCATION" value="L_NP"/>
        <entry key="PERSON" value="L_NP"/>
        <entry key="PRODUCT" value="L_NP"/>
        <entry key="EVENT" value="L_NP"/>
      </map>
      <param key="properNounCategory" value="L_NP"/>
      <param key="commonNounCategory" value="L_NC"/>
    </group>
    <group name="compactFullDumper" class="CompactFullDumper">
      <param key="stopList" value="stopList"/>
      <param key="useStopList" value="true"/>
      <param key="useEmptyMacro" value="true"/>
      <param key="useEmptyMicro" value="true"/>
      <map name="NEmacroCategories">
        <entry key="TIMEX" value="L_NC"/>
        <entry key="NUMEX" value="L_NC"/>
        <entry key="ORGANIZATION" value="L_NP"/>
        <entry key="LOCATION" value="L_NP"/>
        <entry key="PERSON" value="L_NP"/>
        <entry key="PRODUCT" value="L_NP"/>
        <entry key="EVENT" value="L_NP"/>
      </map>
      <param key="properNounCategory" value="L_NP"/>
      <param key="commonNounCategory" value="L_NC"/>
    </group>
    <group name="fullXmlDumper" class="FullXmlDumper">
    </group>
  </module>
  <module name="Resources">
    <group name="charchart" class="CharChart">
	<param key="charFile" value="LinguisticProcessings/ita/tokenizerAutomaton-ita.xml"/>
    </group>
    <group name="mainDictionary" class="ComposedDict">
      <param key="dictionaryCode" value="dictionaryCode"/>
      <param key="nbBytes" value="2"/>
      <list key="dictionaryKeys">
        <item value="LinguisticProcessings/ita/dicoKey-ita.dat"/>
      </list>	
      <list key="dictionaryValues">
        <item value="LinguisticProcessings/ita/dicoDat-ita.dat"/>
      </list>
    </group>
    <group name="dictionaryCode" class="DictionaryCode">
      <param key="codeFile" value="LinguisticProcessings/ita/code-ita.dat"/>
      <param key="codeListFile" value="LinguisticProcessings/ita/codesList-ita.dat"/>
    </group>
    <group name="idiomaticExpressionsRecognizer" class="AutomatonRecognizer">
      <param key="rules" value="LinguisticProcessings/ita/idiomaticExpressions-ita.rules"/>
    </group>
    <group name="trigramMatrix" class="TrigramMatrix">
      <param key="trigramFile" value="Disambiguation/trigramMatrix-ita.dat"/>
    </group>
    <group name="bigramMatrix" class="BigramMatrix">
      <param key="bigramFile" value="Disambiguation/bigramMatrix-ita.dat"/>
    </group>
    <group name="stopList" class="StopList">
      <param key="file" value="LinguisticProcessings/StopLists/stopList-ita.dat"/>
    </group>
    <group name="frequencyDictionary" class="CompactDict16">
      <param key="dictionaryKey" value="Reformulation/frequency-dico-ita-keys.dat"/>
      <param key="dictionaryValues" value="Reformulation/frequency-dico-ita-val.dat"/>
    </group>
    <group name="specificEntitiesAutomaton" class="AutomatonRecognizer">
      <param key="rules" value="SpecificEntities/specificEntitiesRules-ita.bin"/>
    </group>
    <group name="chainMatrix" class="SyntagmDefinitionStructure">
      <param key="file" value="SyntacticAnalysis/chainsMatrix-ita.bin"/>
    </group>
    <group name="l2rHomoSyntagmaticRelationRules" class="AutomatonRecognizer">
      <param key="rules" value="SyntacticAnalysis/l2rHomoSyntagamaticRelationsRules-ita.bin"/>
    </group>
    <group name="r2lHomoSyntagmaticRelationRules" class="AutomatonRecognizer">
      <param key="rules" value="SyntacticAnalysis/r2lHomoSyntagamaticRelationsRules-ita.bin"/>
    </group>
    <group name="automatonCompiler" class="AutomatonRecognizer">
      <param key="rules" value=""/>
    </group>
  </module>
</modulesConfig>